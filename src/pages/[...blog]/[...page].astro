---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Pagination from '~/components/blog/Pagination';
import PostTags from '~/components/blog/Tags.astro';

import { blogListRobots, getRecommendPosts, getStaticPathsBlogList, getCategoryMap, getTagMap } from '~/utils/blog';
import RecommendBlogPosts from '~/components/blog/RecommendBlogPosts';
import { getBlogPermalink } from '~/utils/permalinks';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;

const carouselData = await getRecommendPosts();

const allCategories = Object.values(await getCategoryMap()).map((category) => category.entity);
const allTags = Object.values(await getTagMap()).map((tag) => tag.entity);

const metadata = {
  title: `Blog${currentPage > 1 ? ` — Page ${currentPage}` : ''}`,
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: 'blog',
  },
};
---

<Layout metadata={metadata}>
  <section class="mx-auto max-w-7xl px-6 py-12 sm:py-16 lg:py-20">
    <RecommendBlogPosts client:idle posts={carouselData} className="mb-20" />
    <div class="flex gap-10">
      <div class="flex-1">
        <PostTags tags={allCategories} class="mb-8" title="所有分类" isCategory />
        <PostTags tags={allTags} title="所有标签" />
      </div>
      <div class="w-full min-w-0 max-w-4xl">
        <BlogList posts={page.data} />
        <Pagination
          prevUrl={page.url.prev}
          nextUrl={page.url.next}
          currentPage={currentPage}
          totalPages={page.lastPage}
          baseUrl={page.url.prev?.replace(/\d+\/?$/, '') || page.url.next?.replace(/\d+\/?$/, '') || getBlogPermalink()}
          client:load
        />
      </div>
    </div>
  </section>
</Layout>
