---
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';
import FuwariLayout from '~/layouts/FuwariLayout.astro';
import BlogGrid from '~/components/fuwari/BlogGrid.astro';
import type { NotionCollection, NotionItem } from '../../types/notion';
import { SITE, BLOG } from 'astrowind:config';

// Get all blog posts from notion collection
const notionPosts = await getCollection('notion') as unknown as NotionCollection;

// Sort posts by date
const sortedPosts = notionPosts
  .sort((a: NotionItem, b: NotionItem) => {
    const dateA = a.data.properties?.date?.date?.start ? new Date(a.data.properties.date.date.start) : new Date();
    const dateB = b.data.properties?.date?.date?.start ? new Date(b.data.properties.date.date.start) : new Date();
    return dateB.valueOf() - dateA.valueOf();
  });

// Format posts for display
const formattedPosts = sortedPosts.map((post: NotionItem) => {
  const title = post.data.properties?.Name?.title?.[0]?.plain_text || 'Untitled';
  const excerpt = post.data.properties?.summary?.rich_text?.[0]?.plain_text || '';
  const date = post.data.properties?.date?.date?.start ? new Date(post.data.properties.date.date.start) : new Date();
  const slug = post.data.properties?.slug?.rich_text?.[0]?.plain_text || post.id;
  const tags = post.data.properties?.tags?.multi_select?.map(tag => tag.name) || [];
  
  return {
    id: post.id,
    slug,
    title,
    description: excerpt,
    image: post.data.cover ? post.data.cover.external?.url || post.data.cover.file?.url : undefined,
    publishDate: date,
    excerpt,
    tags,
    readingTime: Math.ceil(excerpt.length / 200) // Rough estimate
  };
});

// Extract all tags from posts and count occurrences
const tagCounts = sortedPosts.reduce((acc, post: NotionItem) => {
  const tags = post.data.properties?.tags?.multi_select || [];
  tags.forEach(tag => {
    if (tag.name) {
      acc[tag.name] = (acc[tag.name] || 0) + 1;
    }
  });
  return acc;
}, {} as Record<string, number>);

// Convert to array and sort by count
const tags = Object.entries(tagCounts)
  .map(([name, count]) => ({ name, count: count as number }))
  .sort((a, b) => b.count - a.count);

const title = 'Blog';
const description = BLOG?.description || 'All the latest articles and posts';
---

<FuwariLayout
  title={title}
  description={description}
>
  <div class="flex flex-col md:flex-row gap-8">
    <!-- Main content -->
    <div class="flex-1">
      <BlogGrid 
        posts={formattedPosts} 
        columns={2}
        featured={true}
      />
    </div>
    
    <!-- Sidebar -->
    <div class="w-full md:w-72 space-y-8">
      <!-- About -->
      <div class="card-base p-6">
        <h2 class="text-xl font-bold mb-4">About</h2>
        <p class="text-muted-foreground mb-4">
          {SITE?.description || 'A beautiful blog powered by Notion and Astro'}
        </p>
        <div class="flex gap-2">
          <a href="/about" class="btn-outline text-sm">
            Learn More
          </a>
        </div>
      </div>
      
      <!-- Tags -->
      <div class="card-base p-6">
        <h2 class="text-xl font-bold mb-4">Tags</h2>
        <div class="flex flex-wrap gap-2">
          {tags.map(tag => (
            <a 
              href={`/tag/${tag.name}`} 
              class="inline-flex items-center rounded-full bg-secondary px-2.5 py-0.5 text-xs font-medium text-secondary-foreground hover:bg-secondary/80"
            >
              #{tag.name}
              <span class="ml-1 text-muted-foreground">({tag.count})</span>
            </a>
          ))}
        </div>
      </div>
      
      <!-- Social Links -->
      <div class="card-base p-6">
        <h2 class="text-xl font-bold mb-4">Follow Us</h2>
        <div class="flex gap-2">
          <a href="https://twitter.com" class="btn-plain rounded-full p-2 bg-secondary hover:bg-secondary/80" aria-label="Twitter">
            <Icon name="tabler:brand-twitter" class="h-5 w-5" />
          </a>
          <a href="https://github.com" class="btn-plain rounded-full p-2 bg-secondary hover:bg-secondary/80" aria-label="GitHub">
            <Icon name="tabler:brand-github" class="h-5 w-5" />
          </a>
          <a href="/rss.xml" class="btn-plain rounded-full p-2 bg-secondary hover:bg-secondary/80" aria-label="RSS">
            <Icon name="tabler:rss" class="h-5 w-5" />
          </a>
        </div>
      </div>
    </div>
  </div>
</FuwariLayout>
